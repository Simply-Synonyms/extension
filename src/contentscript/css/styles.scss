@use 'animations';
@use 'icons';
@use '../../styles/theme';

// Include font faces
@include theme.font-Mulish;

#ssyne-popup, #ssyne-qs-popup {
    /* Revert everything in the popup back to user-agent stylesheet */
    all: initial;

    // Have to use where to avoid bugs caused by specificity
    :where(*:not(svg):not(svg *)) {
        all: revert;
    }
}

@mixin defaultPopupStyles {
    background: white;
    position: fixed;
    // width: 350px;
    overflow-y: auto;
    border-radius: 10px;
    background: white;
    z-index: 100000;
    box-shadow: 0px 8px 22px rgba(0, 0, 0, 0.25);
}

#ssyne-container {
    * {
        font-family: 'Mulish', sans-serif;
    }
}

#ssyne-popup {
    /* We have to include these as mixins so that they are nested in #ssyne-popup and work properly with the all: revert */
    @include animations.animations;
    @include icons.icons;

    @include defaultPopupStyles;
    // min-height: 300px;
    overflow-x: hidden;

    .content {
        margin: 10px 20px;
        position: relative;
    }

    &.collapsed {
        opacity: 0.8;
        @include theme.util-transition;

        &:hover {
            opacity: 1;
        }
    }

    .popup-expand-button {
        position: absolute;
        width: 100%;
        height: 100%; 
    }

    .words {
        .container {
            display: inline-block;
            margin: 3px 6px 3px 0;

            // &.clickable .word {
            //     cursor: pointer;
            // }

            // &.clickable .word:hover {
            //     color: white;
            //     background: theme.$primary-color;
            // }
        }

        .word {
            display: inline-block;
            padding: 3px 6px;
            white-space: nowrap;
            background: white;
            border: 1px solid #E8E8E8;
            border-radius: 6px;
            cursor: pointer;
            box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.01);
            @include theme.util-transition;

            &:hover {
                box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.08);
            }
        }
    }

    .primary-color {
        color: theme.$primary-color
    }

    // .shortdef {
    //     font-weight: bold;
    //     border-top: 2px solid #c1c1c1;
    //     margin: 10px 0 5px;
    //     padding-top: 3px;
    //     font-size: 0.8em;
    // }

    .word-group-label {
        color: theme.$text-gray;
        font-size: 0.8em;
        font-weight: 800;
        margin: 10px 0;
    }

    .muted {
        font-weight: 400;
        color: theme.$muted
    }

    button {
        display: inline-block;
        cursor: pointer;
        background: none;
        border: none;
    }

    .controls {
        background: white;
        position: sticky;
        top: 0;
        z-index: 1000;

        .close {
            font-size: 0.8em;
            color: theme.$muted;
            @include theme.util-transition;

            &:hover {
                color: black;
            }
        }
    }

    .tabs {
        padding: 0 4px;
        display: flex;
        position: relative;
        width: 100%;
        border-bottom: 2px solid theme.$light-gray;
        background: white;
    }

    .tabs::after {
        content: "";
        position: absolute;
        width: 100%;
        height: 1px;
        z-index: -1;
        bottom: 0px;
        box-shadow: 0px 2px 12px #000000;
    }

    .tabs button {
        position: relative;
        color: theme.$muted;
        padding: 10px 6px;
        font-weight: 600;
        @include theme.util-transition;
        transition-property: color;
    }

    .tabs button.active {
        color: theme.$primary-color;
        font-weight: 800;
    }

    .tabs button.active::after {
        content: "";
        position: absolute;
        left: 0;
        bottom: -2px;
        z-index: 30;
        width: 100%;
        height: 2px;
        background: theme.$primary-color;
    }

    .definitions {
        margin-bottom: 20px;

        .homograph {
            position: relative;
            margin: 25px 0;

            &::before {
                content: "";
                position: absolute;
                height: 100%;
                left: -10px;
                width: 2px;
                background: theme.$faded-primary;
            }
        }

        .definition-label {
            margin-top: 0;
            margin-bottom: 8px;
            font-weight: 400;
    
            .functional-type {
                text-transform: uppercase;
                font-size: 0.7em;
                font-weight: 300;
            }
    
            .word {
                font-weight: 800;
            }
    
            .pronunciation {
                color: theme.$muted;
            }
    
            svg {
                margin-bottom: -2px;
            }
        }
    
        .definition {
            margin: 5px 0;
        }

        .offensive {
            color: theme.$warning-color;
            font-size: 0.8em;
            margin: 4px 0;
        }
    }

    .word-details {
        display: flex;
        flex-direction: column;
        gap: 8px;

        .top {
            @include theme.util-flex-middle;

            .back {
                @include theme.util-flex-middle;
                @include theme.util-transition;
                cursor: pointer;
                font-size: 0.8em;
                font-weight: 300;
                color: theme.$text-gray;
                margin-left: -6px;
        
                svg {
                    stroke-width: 1px;
                }

                &:hover {
                    color: black;
                    transform: translateX(-3px);
                }
            }

            .space {
                flex-grow: 1;
            }
        }
    }

    .button {
        border-radius: 10px;
        padding: 8px 12px;
        background: theme.$primary-color;
        font-weight: 600;
        color: white;
        @include theme.util-transition;

        &:hover {
            opacity: 0.8;
        }
    }

    h2 {
        font-weight: 800;
        font-size: 1.15em;
    }

    h6 {
        text-transform: uppercase;
        color: theme.$muted;
        font-size: 0.75em;
        margin: 4px 0;
    }

    .flex-middle {
        @include theme.util-flex-middle;
    }

    .center {
        text-align: center;
    }

    img {
        display: block;
        width: 60%;
        margin: 30px auto;
    }

    .bounce-button {
        @include theme.util-transition;

        &:active {
            transform: scale(0.8);
        }
    }

    // .word-details-hover-container {
    //     position: relative;
    //     top: 0;
    //     bottom: 0;
    // }

    // .word-details-button {
    //     position: absolute;
    //     background: theme.$primary-color;
    //     width: 0;
    //     /* cancel margin of word text span and border radius, but remain behind word text span */
    //     left: -5px;
    //     top: -3px;
    //     bottom: -3px;
    //     z-index: 99000;
    //     transition: 0.2s;
    //     border-radius: 0 10px 10px 0;
    //     overflow: hidden;
    //     cursor: pointer;

    //     i {
    //         margin: 0 auto;
    //         top: 50%;
    //         transform: translateY(-50%);
    //     }
    // }

    // .content:not(.word-hover-disabled) .word-container:hover .word-details-button, .word-container.details-button-open .word-details-button {
    //     width: 26px;
    // }
}

/* The quick search popup */
#ssyne-qs-popup {

    @include defaultPopupStyles;
    text-align: center;

    h3 {
        font-size: 1.1em;
    }

    input {
        @include theme.styled-input;
    }

    select {
        @include theme.styled-select;
    }

    .press-enter-prompt {
        visibility: hidden;
    }
}
